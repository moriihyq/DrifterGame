Tilemap破坏系统设置指南
===========================

这个指南将教您如何在Unity中设置完整的Tilemap破坏系统，让玩家可以攻击并破坏可破坏的墙壁。

目录：
1. 系统概述
2. 基础设置步骤
3. 高级功能配置
4. 常见问题解决
5. 自定义选项

===========================

1. 系统概述
===========================

我们创建了三个主要组件：

1.1 BreakableTilemapManager.cs
- 主要的破坏系统管理器
- 处理瓦片的耐久度、破坏效果、音效等
- 支持不同类型的可破坏瓦片

1.2 PlayerAttackTilemapIntegration.cs  
- 与现有PlayerAttackSystem集成
- 检测玩家攻击并触发Tilemap破坏
- 处理攻击方向和范围

1.3 现有系统兼容
- 与您现有的PlayerAttackSystem完全兼容
- 可以与现有的砖块破坏系统同时使用

===========================

2. 基础设置步骤
===========================

2.1 准备Tilemap
1. 确保您的可破坏墙壁在单独的Tilemap图层上
2. 为该Tilemap添加TilemapCollider2D组件
3. 设置合适的图层（Layer），例如"BreakableWalls"

2.2 设置BreakableTilemapManager
1. 创建空的GameObject，命名为"TilemapBreakManager"
2. 添加BreakableTilemapManager脚本
3. 在Inspector中配置以下设置：

   基础设置：
   - Breakable Tilemap: 拖入您的可破坏墙壁Tilemap
   - Breakable Tiles: 拖入可破坏的瓦片资源（可选，留空则所有瓦片都可破坏）
   - Detection Radius: 攻击检测半径（推荐1.5）

   破坏效果：
   - Break Effect Prefab: 破坏特效预制体（可选）
   - Break Sounds: 破坏音效数组
   - Create Debris: 是否创建碎片（勾选）
   - Debris Count: 碎片数量（推荐5-8）

   耐久度系统：
   - Use Health System: 是否使用耐久度（推荐勾选）
   - Tile Health: 瓦片血量（推荐2-3）
   - Cracked Tile Sprites: 受损瓦片精灵数组（可选）

2.3 设置PlayerAttackTilemapIntegration
1. 在玩家对象上添加PlayerAttackTilemapIntegration脚本
2. 配置以下设置：
   - Tilemap Layers: 设置为包含可破坏墙壁的图层
   - Tilemap Attack Range: 攻击范围（推荐2.0）
   - Show Attack Range: 显示攻击范围（调试用）

===========================

3. 高级功能配置
===========================

3.1 多种破坏效果
您可以配置不同的音效和特效：

音效设置：
- 将多个破坏音效拖入Break Sounds数组
- 系统会随机播放其中一个
- 支持.wav, .mp3, .ogg格式

特效设置：
- 创建粒子系统预制体作为破坏特效
- 系统会自动实例化并在适当时间销毁

3.2 耐久度系统
启用耐久度系统后：
- 瓦片需要多次攻击才能破坏
- 可以配置受损外观（裂纹等）
- 支持不同瓦片类型有不同血量

配置步骤：
1. 勾选"Use Health System"
2. 设置"Tile Health"（瓦片血量）
3. 创建受损瓦片精灵：
   - 准备不同程度受损的瓦片图片
   - 创建对应的Tile资源
   - 将它们按受损程度排列在"Cracked Tile Sprites"数组中

3.3 掉落物品系统
配置步骤：
1. 创建掉落物品的预制体
2. 将预制体拖入"Drop Items"数组
3. 设置"Drop Chance"（掉落概率0-1）

3.4 限制可破坏瓦片类型
如果您只想让特定类型的瓦片可以被破坏：
1. 在"Breakable Tiles"数组中添加可破坏的瓦片资源
2. 只有这些瓦片类型会被破坏系统影响

===========================

4. 常见问题解决
===========================

4.1 攻击无法破坏瓦片
检查项目：
□ 确保Tilemap有TilemapCollider2D组件
□ 检查图层设置是否正确
□ 确认PlayerAttackTilemapIntegration的Tilemap Layers设置
□ 检查攻击范围是否足够大
□ 查看控制台是否有错误信息

4.2 破坏效果不显示
检查项目：
□ 确保Break Effect Prefab正确分配
□ 检查特效的Sorting Layer和Order in Layer
□ 确认音效文件格式正确
□ 检查AudioSource组件设置

4.3 耐久度系统不工作
检查项目：
□ 确保勾选了"Use Health System"
□ 检查"Tile Health"设置是否大于0
□ 确认"Cracked Tile Sprites"数组配置正确
□ 查看控制台的调试信息

4.4 碎片效果异常
检查项目：
□ 确保勾选了"Create Debris"
□ 检查"Debris Count"和"Debris Force"设置
□ 确认场景中有Physics2D设置

===========================

5. 自定义选项
===========================

5.1 自定义攻击检测
您可以修改PlayerAttackTilemapIntegration中的GetAttackDirection()方法：

```csharp
private Vector2 GetAttackDirection()
{
    // 示例：总是向鼠标方向攻击
    Vector3 mousePos = Camera.main.ScreenToWorldPoint(Input.mousePosition);
    Vector2 direction = (mousePos - transform.position).normalized;
    return direction;
}
```

5.2 自定义破坏条件
在BreakableTilemapManager中的IsBreakableTile()方法中添加自定义逻辑：

```csharp
private bool IsBreakableTile(TileBase tile)
{
    // 示例：只有特定名称的瓦片才能破坏
    if (tile.name.Contains("Breakable"))
        return true;
    return false;
}
```

5.3 添加特殊效果
您可以在BreakTile()方法中添加自定义效果：

```csharp
private void BreakTile(Vector3Int cellPosition, TileBase tile)
{
    // ... 现有代码 ...
    
    // 自定义效果
    CameraShake.Instance?.Shake(0.1f, 0.2f); // 摄像机震动
    PlayerStats.Instance?.AddScore(10); // 增加分数
}
```

===========================

6. 性能优化建议
===========================

6.1 图层优化
- 将可破坏墙壁单独放在一个图层
- 使用合适的LayerMask减少不必要的碰撞检测

6.2 音效优化
- 使用音效池避免频繁创建AudioSource
- 限制同时播放的破坏音效数量

6.3 特效优化
- 使用对象池管理破坏特效和碎片
- 设置合理的碎片生存时间

6.4 内存优化
- 定期清理销毁的GameObject
- 使用Sprite Atlas优化贴图内存

===========================

这个破坏系统现在已经与您的PlayerAttackSystem完全集成，
支持耐久度、特效、音效、掉落等完整功能。

您可以根据游戏需求调整各项参数，系统设计得非常灵活易扩展。

快速开始：
1. 在可破坏墙壁Tilemap上添加BreakableTilemapManager
2. 在玩家对象上添加PlayerAttackTilemapIntegration  
3. 配置基础参数并测试效果
4. 根据需要添加音效、特效等高级功能 